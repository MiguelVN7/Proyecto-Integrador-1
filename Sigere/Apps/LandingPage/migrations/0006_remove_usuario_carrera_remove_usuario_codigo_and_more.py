# Generated by Django 5.1.6 on 2025-10-14 23:09

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


def seed_profiles(apps, schema_editor):
    Usuario = apps.get_model('LandingPage', 'Usuario')
    PerfilUniversitario = apps.get_model('LandingPage', 'PerfilUniversitario')

    for usuario in Usuario.objects.all():
        PerfilUniversitario.objects.get_or_create(
            usuario=usuario,
            defaults={
                'numero_estudiante': getattr(usuario, 'numero_estudiante', None),
                'carrera': getattr(usuario, 'carrera', None),
                'semestre': getattr(usuario, 'semestre', None),
                'facultad': getattr(usuario, 'facultad', None),
                'codigo': getattr(usuario, 'codigo', None),
            }
        )


def remove_profiles(apps, schema_editor):
    PerfilUniversitario = apps.get_model('LandingPage', 'PerfilUniversitario')
    PerfilUniversitario.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('LandingPage', '0005_reserva_cancelada_usuario_carrera_usuario_codigo_and_more'),
    ]

    operations = [
        migrations.AddField(
            model_name='espaciodeportivo',
            name='calificacion_promedio',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=3),
        ),
        migrations.AddField(
            model_name='espaciodeportivo',
            name='total_resenas',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.CreateModel(
            name='PerfilUniversitario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_estudiante', models.CharField(blank=True, max_length=35, null=True)),
                ('carrera', models.CharField(blank=True, max_length=35, null=True)),
                ('semestre', models.CharField(blank=True, max_length=35, null=True)),
                ('facultad', models.CharField(blank=True, max_length=35, null=True)),
                ('codigo', models.CharField(blank=True, max_length=35, null=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_universitario', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RunPython(seed_profiles, remove_profiles),
        migrations.RemoveField(
            model_name='usuario',
            name='carrera',
        ),
        migrations.RemoveField(
            model_name='usuario',
            name='codigo',
        ),
        migrations.RemoveField(
            model_name='usuario',
            name='facultad',
        ),
        migrations.RemoveField(
            model_name='usuario',
            name='numero_estudiante',
        ),
        migrations.RemoveField(
            model_name='usuario',
            name='semestre',
        ),
        migrations.CreateModel(
            name='Resena',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('calificacion', models.PositiveSmallIntegerField()),
                ('comentario', models.TextField(blank=True)),
                ('publicada', models.BooleanField(default=True)),
                ('espacio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resenas', to='LandingPage.espaciodeportivo')),
                ('reserva', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='resena', to='LandingPage.reserva')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resenas', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('usuario', 'espacio', 'reserva')},
            },
        ),
    ]
