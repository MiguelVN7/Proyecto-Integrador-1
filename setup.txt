Sigere – Guía de configuración rápida
===================================

1. Requisitos previos
   • Python 3.11 instalado (https://www.python.org/).  
   • Git (opcional, para clonar el repositorio).  
   • Acceso a internet para instalar dependencias.  

2. Clonar u obtener el proyecto
   • Desde Git: `git clone <url-del-repo>`  
   • O copia el contenido del proyecto en una carpeta local.  
   • Sitúate en la raíz del proyecto (donde está `manage.py`).

3. Crear entorno virtual (recomendado)
   • Windows (PowerShell):
     ```powershell
     python -m venv .venv
     .\.venv\Scripts\Activate.ps1
     ```
   • macOS/Linux (bash/zsh):
     ```bash
     python3 -m venv .venv
     source .venv/bin/activate
     ```

4. Instalar dependencias
   • Con el entorno virtual activo:
     ```
     pip install -r requirements.txt
     ```

5. Variables de entorno (.env)
   • El proyecto usa `python-dotenv` y espera un token para la integración con OpenAI.  
   • Crea un archivo `.env` en la raíz con al menos:  
     ```
     OPENAI_API_KEY=dummy
     ```
   • Si no cuentas con una clave válida, puedes dejar `dummy` para desarrollo local.  

6. Migraciones de base de datos
   • Ejecuta las migraciones para crear las tablas de SQLite (incluye el modelo `PerfilUniversitario` y reseñas):
     ```
     python manage.py migrate
     ```
   • (Opcional) Crea un usuario administrador para acceder al panel de Django:
     ```
     python manage.py createsuperuser
     ```
   • (Opcional) Carga datos de ejemplo si deseas poblar la base con reservas iniciales:
     ```
     python populate.py
     ```

7. Levantar el servidor de desarrollo
   • Asegúrate de mantener el entorno virtual activo y el `.env` configurado.  
   • Ejecuta:
     ```
     python manage.py runserver
     ```
   • Si usas PowerShell y necesitas definir la variable temporalmente:  
     ```powershell
     $env:OPENAI_API_KEY="dummy"; python manage.py runserver
     ```

     Yo lo corro así en mi windows:
     ```powershell
     $env:DJANGO_SETTINGS_MODULE="Sigere.settings"; $env:OPENAI_API_KEY="dummy"; C:/Users/Miguel/AppData/Local/Microsoft/WindowsApps/python3.11.exe manage.py runserver
     ```

8. Rutas principales de la aplicación
   • Página de aterrizaje: http://127.0.0.1:8000/  
   • Inicio (home): http://127.0.0.1:8000/home/  
   • Inicio de sesión: http://127.0.0.1:8000/login/  
   • Panel de reservas: http://127.0.0.1:8000/misReservas/  
   • Perfil de usuario: http://127.0.0.1:8000/perfil/  

9. Comprobaciones recomendadas
   • Verifica que todo esté correcto antes de ejecutar el servidor:
     ```
     python manage.py check
     ```
   • Si modificas el modelo, recuerda volver a ejecutar `makemigrations` y `migrate`.

10. Notas adicionales
    • El proyecto usa SQLite (`Sigere.db`) por defecto; no es necesario modificar `settings.py` para desarrollo.  
    • Los archivos estáticos se sirven mediante Django durante el desarrollo.  
    • Para despliegues en producción deberás configurar variables de entorno seguras, HTTPS, y un servidor WSGI (por ejemplo, Gunicorn) detrás de un servidor web.  
